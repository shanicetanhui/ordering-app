version: '3.8'

services:
  # RabbitMQ Message Queue
  rabbitmq:
    image: rabbitmq:3-management
    container_name: ordering-rabbitmq
    ports:
      - "5672:5672"     # AMQP port
      - "15672:15672"   # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER:-admin}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS:-admin}
      RABBITMQ_DEFAULT_VHOST: /
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - ordering-network

  # Backend API
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: ordering-backend
    ports:
      - "3001:3000"
    environment:
      - RABBITMQ_URL=amqp://${RABBITMQ_DEFAULT_USER:-admin}:${RABBITMQ_DEFAULT_PASS:-admin}@rabbitmq:5672
    depends_on:
      - rabbitmq
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - ordering-network
    restart: unless-stopped

  # Frontend Web App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ordering-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - ordering-network
    restart: unless-stopped

volumes:
  rabbitmq_data:

networks:
  ordering-network:
    driver: bridge
